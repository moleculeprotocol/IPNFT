type Ipnft @entity {
    id: ID! #tokenId
    owner: Bytes! # address
    createdAt: BigInt!

    balance: BigInt!
    slotId: ID!

    name: String
    description: String
    image: String

    external_url: String
    agreement_url: String
    project_details_url: String

    listings: [Listing!] @derivedFrom(field: "ipnft")
}

type Slot @entity {
    id: ID! #slotId
    metadatab64: String
    #ipnfts: [Ipnft!] @derivedFrom(field: "slot")
}

type Listing @entity {
    id: ID!
    ipnft: Ipnft!
    creator: Bytes! #address
    paymentToken: Bytes! #address ERC20 Token
    askPrice: BigInt!
    createdAt: BigInt!
    unlistedAt: BigInt
    purchasedAt: BigInt
    buyer: Bytes #address
    allowed: [Allowed!] @derivedFrom(field: "listing")
}

type Allowed @entity {
    id: ID! #listingid-account
    account: Bytes!
    listing: Listing!
    allowed: Boolean!
}

type Reservation @entity {
    id: ID! #reservationId will be future tokenId
    owner: Bytes! #address
    name: String
    createdAt: BigInt!
}

enum MintpassStatus {
    DEFAULT
    REDEEMED
    REVOKED
}

type Mintpass @entity {
    id: ID! #tokenId
    owner: Bytes! #address
    createdAt: BigInt!
    status: MintpassStatus
}
