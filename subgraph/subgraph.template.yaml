specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: IPNFT
    network: {{network}}
    source:
      address: '{{ipnft.address}}'
      abi: IPNFT
      startBlock: {{ipnft.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - IPNFT
      abis:
        - name: IPNFT
          file: ./abis/IPNFT.json
      eventHandlers:
        - event: Reserved(indexed address,indexed uint256)
          handler: handleReservation
        - event: IPNFTMinted(indexed address,indexed uint256,string,string)
          handler: handleMint
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: ReadAccessGranted(indexed uint256,indexed address,uint256)
          handler: handleReadAccess

      file: ./src/ipnftMapping.ts
  - kind: ethereum
    name: SchmackoSwap
    network: {{network}}
    source:
      address: '{{schmackoSwap.address}}'
      abi: SchmackoSwap
      startBlock: {{schmackoSwap.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Listing
      abis:
        - name: SchmackoSwap
          file: ./abis/SchmackoSwap.json
      eventHandlers:
        - event: Listed(uint256,(address,uint256,address,uint256,address,uint256,address,uint8))
          handler: handleListed
        - event: Unlisted(uint256,(address,uint256,address,uint256,address,uint256,address,uint8))
          handler: handleUnlisted
        - event: Purchased(uint256,indexed address,(address,uint256,address,uint256,address,uint256,address,uint8))
          handler: handlePurchased
        - event: AllowlistUpdated(uint256,indexed address,bool)
          handler: handleAllowlistUpdated
      file: ./src/swapMapping.ts
  - kind: ethereum
    name: Mintpass
    network: {{network}}
    source:
      address: '{{mintpass.address}}'
      abi: Mintpass
      startBlock: {{mintpass.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Mintpass
      abis:
        - name: Mintpass
          file: ./abis/Mintpass.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: Revoked(indexed uint256)
          handler: handleRevoked
        - event: Redeemed(indexed uint256)
          handler: handleRedeemed
      file: ./src/mintpassMapping.ts
  - kind: ethereum
    name: Fractionalizer
    network: {{network}}
    source:
      address: '{{fractionalizer.address}}'
      abi: Fractionalizer
      startBlock: {{fractionalizer.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Fractionalized
        - Fraction
      abis:
        - name: Fractionalizer
          file: ./abis/Fractionalizer.json
      eventHandlers:
        - event: FractionsCreated(indexed uint256,indexed uint256,indexed address,address,uint256,string,string,string)
          handler: handleFractionsCreated
        # - event: SalesActivated(uint256,address,uint256)
        #   handler: handleSalesActivated
        # - event: TermsAccepted(indexed uint256,indexed address,bytes)
        #   handler: handleTermsAccepted
      file: ./src/fractionalizerMapping.ts
  - kind: ethereum
    name: StakedVestedCrowdSale
    network: {{network}}
    source:
      address: '{{stakedVestedCrowdSale.address}}'
      abi: StakedVestedCrowdSale
      startBlock: {{stakedVestedCrowdSale.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - CrowdSale
        - Contribution
        - ERC20Token
      abis:
        - name: StakedVestedCrowdSale
          file: ./abis/StakedVestedCrowdSale.json
        - name: IERC20Metadata
          file: ./abis/IERC20Metadata.json
      eventHandlers:
        - event: Started(uint256,indexed address,(address,address,address,uint256,uint256,uint64),(address,uint256,uint256),(address,address,uint256,uint256))
          handler: handleStarted
        - event: Settled(indexed uint256,uint256,uint256)
          handler: handleSettled
        - event: Claimed(indexed uint256,indexed address,uint256,uint256)
          handler: handleClaimed
        - event: Bid(indexed uint256,indexed address,uint256,uint256,uint256)
          handler: handleBid
        - event: Failed(uint256)
          handler: handleFailed
      file: ./src/stakedVestedCrowdSaleMapping.ts
  - kind: ethereum
    name: TermsAcceptedPermissioner
    network: {{network}}
    source:
      address: '{{termsAcceptedPermissioner.address}}'
      abi: TermsAcceptedPermissioner
      startBlock: {{termsAcceptedPermissioner.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Fraction
      abis:
        - name: TermsAcceptedPermissioner
          file: ./abis/TermsAcceptedPermissioner.json
      eventHandlers:
        - event: TermsAccepted(indexed address,indexed address,bytes)
          handler: handleTermsAccepted
      file: ./src/termsAcceptedPermissionerMapping.ts
templates:
  - name: FractionalizedToken
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: FractionalizedToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/fractionalizedTokenMapping.ts
      entities:
        - Fraction
      abis:
        - name: FractionalizedToken
          file: ./abis/FractionalizedToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Capped(uint256)
          handler: handleCapped
        # - event: SharesClaimed(indexed uint256,indexed address,uint256)
        #   handler: handleSharesClaimed
